@model KTG.Areas.Setup.ViewModels.ShulSetupViewModel

@{
	ViewBag.Title = "AddShul";
}

<h2>Add Shul</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Shul</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.State, Model.svm.GetStateSelector(), new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
				@Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Rabbi, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Rabbi, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Rabbi, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Nusach, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Nusach, Model.NusachSelector(), new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Nusach, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group" id="OtherNusachDiv" style="display:none">
			@Html.LabelFor(model => model.OtherNusach, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OtherNusach, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OtherNusach, "", new { @class = "text-danger" })
			</div>
		</div>
		@Html.HiddenFor(m => m.CityCode);
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$("#Nusach").change(function () {
			if ($("#Nusach").val() == "Other") {  
				$("#OtherNusachDiv").show();
			}
			else {
				$("#OtherNusachDiv").hide();
			}
		})
	</script>

}
